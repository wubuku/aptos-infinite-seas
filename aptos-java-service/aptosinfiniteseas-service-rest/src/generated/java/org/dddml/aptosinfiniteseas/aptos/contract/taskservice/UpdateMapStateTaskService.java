// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.aptosinfiniteseas.aptos.contract.taskservice;

import org.dddml.aptosinfiniteseas.domain.map.AbstractMapEvent;
import org.dddml.aptosinfiniteseas.aptos.contract.repository.*;
import org.dddml.aptosinfiniteseas.aptos.contract.service.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

@Service
public class UpdateMapStateTaskService {

    @Autowired
    private AptosMapService aptosMapService;

    @Autowired
    private MapEventRepository mapEventRepository;

    @Autowired
    private MapEventService mapEventService;

    @Scheduled(fixedDelayString = "${aptos.contract.update-map-states.fixed-delay:5000}")
    @Transactional
    public void updateMapStates() {
        java.util.List<AbstractMapEvent> es = mapEventRepository.findByEventStatusIsNull();
        AbstractMapEvent e = es.stream().findFirst().orElse(null);
        if (e != null) {
            aptosMapService.updateMapState(e.getAccountAddress());
            es.stream().filter(ee -> ee.getAccountAddress().equals(e.getAccountAddress()))
                    .forEach(mapEventService::updateStatusToProcessed);
        }
    }

}
