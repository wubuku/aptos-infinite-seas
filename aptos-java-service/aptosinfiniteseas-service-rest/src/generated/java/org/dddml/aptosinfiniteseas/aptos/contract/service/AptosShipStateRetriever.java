// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.aptosinfiniteseas.aptos.contract.service;


import com.github.wubuku.aptos.bean.AccountResource;
import com.github.wubuku.aptos.utils.*;
import org.dddml.aptosinfiniteseas.aptos.contract.AptosAccount;
import org.dddml.aptosinfiniteseas.aptos.contract.ContractConstants;
import org.dddml.aptosinfiniteseas.aptos.contract.DomainBeanUtils;
import org.dddml.aptosinfiniteseas.aptos.contract.repository.AptosAccountRepository;
import org.dddml.aptosinfiniteseas.domain.ship.*;
import org.dddml.aptosinfiniteseas.domain.*;
import org.dddml.aptosinfiniteseas.aptos.contract.Ship;

import java.io.IOException;
import java.math.*;
import java.util.*;
import java.util.function.*;


public class AptosShipStateRetriever {

    private NodeApiClient aptosNodeApiClient;

    private String aptosContractAddress;

    private AptosAccountRepository aptosAccountRepository;

    private Function<String, ShipState.MutableShipState> shipStateFactory;


    public AptosShipStateRetriever(NodeApiClient aptosNodeApiClient,
                                    String aptosContractAddress,
                                    AptosAccountRepository aptosAccountRepository,
                                    Function<String, ShipState.MutableShipState> shipStateFactory
    ) {
        this.aptosNodeApiClient = aptosNodeApiClient;
        this.aptosContractAddress = aptosContractAddress;
        this.aptosAccountRepository = aptosAccountRepository;
        this.shipStateFactory = shipStateFactory;
    }

    public ShipState retrieveShipState(String id) {
        AccountResource<Ship> accountResource;
        try {
            accountResource = aptosNodeApiClient.getAccountResource(id,
                    this.aptosContractAddress + "::" + ContractConstants.SHIP_MODULE_SHIP,
                    Ship.class,
                    null);
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
        Ship ship = accountResource.getData();
        if (ship == null) {
            return null;
        }
        ship.setId(id);
        return toShipState(ship);
    }

    private ShipState toShipState(Ship ship) {
        ShipState.MutableShipState shipState = shipStateFactory.apply(ship.getId());
        shipState.setVersion(ship.getVersion());
        shipState.setOwner(ship.getOwner());
        shipState.setHealthPoints(ship.getHealthPoints());
        shipState.setAttack(ship.getAttack());
        shipState.setProtection(ship.getProtection());
        shipState.setSpeed(ship.getSpeed());
        shipState.setBuildingExpenses(DomainBeanUtils.toItemIdQuantityPairs(ship.getBuildingExpenses()));
        shipState.setInventory(java.util.Arrays.stream(ship.getInventory()).map(x -> DomainBeanUtils.toItemIdQuantityPair(x)).collect(java.util.stream.Collectors.toSet()));
        return shipState;
    }

    private String getResourceAccountAddress() {
        return aptosAccountRepository.findById(ContractConstants.RESOURCE_ACCOUNT_ADDRESS)
                .map(AptosAccount::getAddress).orElse(null);
    }

}

