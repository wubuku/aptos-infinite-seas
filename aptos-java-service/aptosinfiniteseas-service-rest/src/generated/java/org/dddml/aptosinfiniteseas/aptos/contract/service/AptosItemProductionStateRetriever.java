// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.aptosinfiniteseas.aptos.contract.service;


import com.github.wubuku.aptos.bean.AccountResource;
import com.github.wubuku.aptos.utils.*;
import org.dddml.aptosinfiniteseas.aptos.contract.AptosAccount;
import org.dddml.aptosinfiniteseas.aptos.contract.ContractConstants;
import org.dddml.aptosinfiniteseas.aptos.contract.DomainBeanUtils;
import org.dddml.aptosinfiniteseas.aptos.contract.repository.AptosAccountRepository;
import org.dddml.aptosinfiniteseas.domain.itemproduction.*;
import org.dddml.aptosinfiniteseas.domain.*;
import org.dddml.aptosinfiniteseas.aptos.contract.ItemProduction;

import java.io.IOException;
import java.math.*;
import java.util.*;
import java.util.function.*;


public class AptosItemProductionStateRetriever {

    private NodeApiClient aptosNodeApiClient;

    private String aptosContractAddress;

    private AptosAccountRepository aptosAccountRepository;

    private Function<SkillTypeItemIdPair, ItemProductionState.MutableItemProductionState> itemProductionStateFactory;


    public AptosItemProductionStateRetriever(NodeApiClient aptosNodeApiClient,
                                    String aptosContractAddress,
                                    AptosAccountRepository aptosAccountRepository,
                                    Function<SkillTypeItemIdPair, ItemProductionState.MutableItemProductionState> itemProductionStateFactory
    ) {
        this.aptosNodeApiClient = aptosNodeApiClient;
        this.aptosContractAddress = aptosContractAddress;
        this.aptosAccountRepository = aptosAccountRepository;
        this.itemProductionStateFactory = itemProductionStateFactory;
    }

    public ItemProductionState retrieveItemProductionState(SkillTypeItemIdPair itemProductionId) {
        String resourceAccountAddress = getResourceAccountAddress();
        AccountResource<ItemProduction.Tables> accountResource;
        try {
            accountResource = aptosNodeApiClient.getAccountResource(resourceAccountAddress,
                    this.aptosContractAddress + "::" + ContractConstants.ITEM_PRODUCTION_MODULE_TABLES,
                    ItemProduction.Tables.class,
                    null);
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
        String tableHandle = accountResource.getData().getItemProductionTable().getHandle();
        ItemProduction itemProduction;
        try {
            itemProduction = aptosNodeApiClient.getTableItem(
                    tableHandle,
                    ContractConstants.toNumericalAddressType(ContractConstants.ITEM_PRODUCTION_ID_TYPE, this.aptosContractAddress),
                    this.aptosContractAddress + "::" + ContractConstants.ITEM_PRODUCTION_MODULE_ITEM_PRODUCTION,
                    itemProductionId,
                    ItemProduction.class,
                    null
            );
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
        return toItemProductionState(itemProduction);
    }

    private ItemProductionState toItemProductionState(ItemProduction itemProduction) {
        ItemProductionState.MutableItemProductionState itemProductionState = itemProductionStateFactory.apply(DomainBeanUtils.toSkillTypeItemIdPair(itemProduction.getItemProductionId()));
        itemProductionState.setVersion(itemProduction.getVersion());
        itemProductionState.setProductionMaterials(DomainBeanUtils.toItemIdQuantityPairs(itemProduction.getProductionMaterials()));
        itemProductionState.setRequirementsLevel(itemProduction.getRequirementsLevel());
        itemProductionState.setBaseQuantity(itemProduction.getBaseQuantity());
        itemProductionState.setBaseExperience(itemProduction.getBaseExperience());
        itemProductionState.setBaseCreationTime(itemProduction.getBaseCreationTime());
        itemProductionState.setEnergyCost(itemProduction.getEnergyCost());
        itemProductionState.setSuccessRate(itemProduction.getSuccessRate());
        return itemProductionState;
    }

    private String getResourceAccountAddress() {
        return aptosAccountRepository.findById(ContractConstants.RESOURCE_ACCOUNT_ADDRESS)
                .map(AptosAccount::getAddress).orElse(null);
    }

}

