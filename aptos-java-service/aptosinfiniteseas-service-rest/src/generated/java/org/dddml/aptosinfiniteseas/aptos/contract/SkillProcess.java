// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.aptosinfiniteseas.aptos.contract;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.PropertyNamingStrategies;
import com.fasterxml.jackson.databind.annotation.JsonNaming;
import com.github.wubuku.aptos.bean.*;

import java.math.*;
import java.util.*;

@JsonNaming(PropertyNamingStrategies.SnakeCaseStrategy.class)
public class SkillProcess {

    private String id;

    private Long offChainVersion;

    private SkillProcessId skillProcessId;

    private Long itemId;

    private BigInteger startedAt;

    private BigInteger creationTime;

    private Boolean completed;

    private BigInteger endedAt;

    private com.github.wubuku.aptos.bean.Option<ItemIdQuantityPairs> productionMaterials;

    private Long batchSize;

    private BigInteger version;

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public Long getOffChainVersion() {
        return offChainVersion;
    }

    public void setOffChainVersion(Long offChainVersion) {
        this.offChainVersion = offChainVersion;
    }

    public SkillProcessId getSkillProcessId() {
        return skillProcessId;
    }

    public void setSkillProcessId(SkillProcessId skillProcessId) {
        this.skillProcessId = skillProcessId;
    }

    public Long getItemId() {
        return itemId;
    }

    public void setItemId(Long itemId) {
        this.itemId = itemId;
    }

    public BigInteger getStartedAt() {
        return startedAt;
    }

    public void setStartedAt(BigInteger startedAt) {
        this.startedAt = startedAt;
    }

    public BigInteger getCreationTime() {
        return creationTime;
    }

    public void setCreationTime(BigInteger creationTime) {
        this.creationTime = creationTime;
    }

    public Boolean getCompleted() {
        return completed;
    }

    public void setCompleted(Boolean completed) {
        this.completed = completed;
    }

    public BigInteger getEndedAt() {
        return endedAt;
    }

    public void setEndedAt(BigInteger endedAt) {
        this.endedAt = endedAt;
    }

    public com.github.wubuku.aptos.bean.Option<ItemIdQuantityPairs> getProductionMaterials() {
        return productionMaterials;
    }

    public void setProductionMaterials(com.github.wubuku.aptos.bean.Option<ItemIdQuantityPairs> productionMaterials) {
        this.productionMaterials = productionMaterials;
    }

    public Long getBatchSize() {
        return batchSize;
    }

    public void setBatchSize(Long batchSize) {
        this.batchSize = batchSize;
    }

    public BigInteger getVersion() {
        return version;
    }

    public void setVersion(BigInteger version) {
        this.version = version;
    }

    @Override
    public String toString() {
        return "SkillProcess{" +
                ", id=" + '\'' + id + '\'' +
                ", offChainVersion=" + offChainVersion +
                ", skillProcessId=" + skillProcessId +
                ", itemId=" + itemId +
                ", startedAt=" + startedAt +
                ", creationTime=" + creationTime +
                ", completed=" + completed +
                ", endedAt=" + endedAt +
                ", productionMaterials=" + productionMaterials +
                ", batchSize=" + batchSize +
                ", version=" + version +
                '}';
    }

    public static class Tables {
        @JsonProperty("skill_process_table")
        private Table skillProcessTable;

        public Table getSkillProcessTable() {
            return skillProcessTable;
        }

        public void setSkillProcessTable(Table skillProcessTable) {
            this.skillProcessTable = skillProcessTable;
        }

        @Override
        public String toString() {
            return "SkillProcess.Tables{" +
                    "skillProcessTable=" + skillProcessTable +
                    '}';
        }
    }

}
