// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.aptosinfiniteseas.aptos.contract.service;


import com.github.wubuku.aptos.bean.AccountResource;
import com.github.wubuku.aptos.utils.*;
import org.dddml.aptosinfiniteseas.aptos.contract.AptosAccount;
import org.dddml.aptosinfiniteseas.aptos.contract.ContractConstants;
import org.dddml.aptosinfiniteseas.aptos.contract.DomainBeanUtils;
import org.dddml.aptosinfiniteseas.aptos.contract.repository.AptosAccountRepository;
import org.dddml.aptosinfiniteseas.domain.roster.*;
import org.dddml.aptosinfiniteseas.domain.*;
import org.dddml.aptosinfiniteseas.aptos.contract.Roster;

import java.io.IOException;
import java.math.*;
import java.util.*;
import java.util.function.*;


public class AptosRosterStateRetriever {

    private NodeApiClient aptosNodeApiClient;

    private String aptosContractAddress;

    private AptosAccountRepository aptosAccountRepository;

    private Function<String, RosterState.MutableRosterState> rosterStateFactory;


    public AptosRosterStateRetriever(NodeApiClient aptosNodeApiClient,
                                    String aptosContractAddress,
                                    AptosAccountRepository aptosAccountRepository,
                                    Function<String, RosterState.MutableRosterState> rosterStateFactory
    ) {
        this.aptosNodeApiClient = aptosNodeApiClient;
        this.aptosContractAddress = aptosContractAddress;
        this.aptosAccountRepository = aptosAccountRepository;
        this.rosterStateFactory = rosterStateFactory;
    }

    public RosterState retrieveRosterState(String id) {
        AccountResource<Roster> accountResource;
        try {
            accountResource = aptosNodeApiClient.getAccountResource(id,
                    this.aptosContractAddress + "::" + ContractConstants.ROSTER_MODULE_ROSTER,
                    Roster.class,
                    null);
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
        Roster roster = accountResource.getData();
        if (roster == null) {
            return null;
        }
        roster.setId(id);
        return toRosterState(roster);
    }

    private RosterState toRosterState(Roster roster) {
        RosterState.MutableRosterState rosterState = rosterStateFactory.apply(roster.getId());
        rosterState.setVersion(roster.getVersion());
        rosterState.setRosterId(DomainBeanUtils.toRosterId(roster.getRosterId()));
        rosterState.setStatus(roster.getStatus());
        rosterState.setSpeed(roster.getSpeed());
        rosterState.setShipIds(new HashSet<>(Arrays.asList(roster.getShipIds())));
        rosterState.setUpdatedCoordinates(DomainBeanUtils.toCoordinates(roster.getUpdatedCoordinates()));
        rosterState.setCoordinatesUpdatedAt(roster.getCoordinatesUpdatedAt());
        rosterState.setTargetCoordinates(DomainBeanUtils.toCoordinates(roster.getTargetCoordinates().getVec().size() == 0 ? null : roster.getTargetCoordinates().getVec().get(0)));
        rosterState.setOriginCoordinates(DomainBeanUtils.toCoordinates(roster.getOriginCoordinates().getVec().size() == 0 ? null : roster.getOriginCoordinates().getVec().get(0)));
        rosterState.setSailDuration(roster.getSailDuration());
        rosterState.setShipBattleId(roster.getShipBattleId().getVec().size() == 0 ? null : roster.getShipBattleId().getVec().get(0));
        rosterState.setEnvironmentOwned(roster.getEnvironmentOwned());
        rosterState.setBaseExperience(roster.getBaseExperience().getVec().size() == 0 ? null : roster.getBaseExperience().getVec().get(0));
        return rosterState;
    }

    private String getResourceAccountAddress() {
        return aptosAccountRepository.findById(ContractConstants.RESOURCE_ACCOUNT_ADDRESS)
                .map(AptosAccount::getAddress).orElse(null);
    }

}

