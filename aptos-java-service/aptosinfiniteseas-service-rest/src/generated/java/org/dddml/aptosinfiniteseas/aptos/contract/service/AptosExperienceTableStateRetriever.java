// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.aptosinfiniteseas.aptos.contract.service;


import com.github.wubuku.aptos.bean.AccountResource;
import com.github.wubuku.aptos.utils.*;
import org.dddml.aptosinfiniteseas.aptos.contract.AptosAccount;
import org.dddml.aptosinfiniteseas.aptos.contract.ContractConstants;
import org.dddml.aptosinfiniteseas.aptos.contract.DomainBeanUtils;
import org.dddml.aptosinfiniteseas.aptos.contract.repository.AptosAccountRepository;
import org.dddml.aptosinfiniteseas.domain.experiencetable.*;
import org.dddml.aptosinfiniteseas.domain.*;
import org.dddml.aptosinfiniteseas.aptos.contract.ExperienceTable;

import java.io.IOException;
import java.math.*;
import java.util.*;
import java.util.function.*;


public class AptosExperienceTableStateRetriever {

    private NodeApiClient aptosNodeApiClient;

    private String aptosContractAddress;

    private AptosAccountRepository aptosAccountRepository;

    private Function<String, ExperienceTableState.MutableExperienceTableState> experienceTableStateFactory;


    public AptosExperienceTableStateRetriever(NodeApiClient aptosNodeApiClient,
                                    String aptosContractAddress,
                                    AptosAccountRepository aptosAccountRepository,
                                    Function<String, ExperienceTableState.MutableExperienceTableState> experienceTableStateFactory
    ) {
        this.aptosNodeApiClient = aptosNodeApiClient;
        this.aptosContractAddress = aptosContractAddress;
        this.aptosAccountRepository = aptosAccountRepository;
        this.experienceTableStateFactory = experienceTableStateFactory;
    }

    public ExperienceTableState retrieveExperienceTableState(String accountAddress) {
        String resourceAccountAddress = getResourceAccountAddress();
        AccountResource<ExperienceTable> accountResource;
        try {
            accountResource = aptosNodeApiClient.getAccountResource(resourceAccountAddress,
                    this.aptosContractAddress + "::" + ContractConstants.EXPERIENCE_TABLE_MODULE_EXPERIENCE_TABLE,
                    ExperienceTable.class,
                    null);
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
        ExperienceTable experienceTable = accountResource.getData();
        experienceTable.setAccountAddress(resourceAccountAddress);
        return toExperienceTableState(experienceTable);
    }

    private ExperienceTableState toExperienceTableState(ExperienceTable experienceTable) {
        ExperienceTableState.MutableExperienceTableState experienceTableState = experienceTableStateFactory.apply(experienceTable.getAccountAddress());
        experienceTableState.setVersion(experienceTable.getVersion());
        experienceTableState.setLevels(java.util.Arrays.stream(experienceTable.getLevels()).map(x -> DomainBeanUtils.toExperienceLevel(x)).collect(java.util.stream.Collectors.toList()));
        return experienceTableState;
    }

    private String getResourceAccountAddress() {
        return aptosAccountRepository.findById(ContractConstants.RESOURCE_ACCOUNT_ADDRESS)
                .map(AptosAccount::getAddress).orElse(null);
    }

}

