// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.aptosinfiniteseas.aptos.contract.service;


import com.github.wubuku.aptos.bean.AccountResource;
import com.github.wubuku.aptos.utils.*;
import org.dddml.aptosinfiniteseas.aptos.contract.AptosAccount;
import org.dddml.aptosinfiniteseas.aptos.contract.ContractConstants;
import org.dddml.aptosinfiniteseas.aptos.contract.DomainBeanUtils;
import org.dddml.aptosinfiniteseas.aptos.contract.repository.AptosAccountRepository;
import org.dddml.aptosinfiniteseas.domain.itemcreation.*;
import org.dddml.aptosinfiniteseas.domain.*;
import org.dddml.aptosinfiniteseas.aptos.contract.ItemCreation;

import java.io.IOException;
import java.math.*;
import java.util.*;
import java.util.function.*;


public class AptosItemCreationStateRetriever {

    private NodeApiClient aptosNodeApiClient;

    private String aptosContractAddress;

    private AptosAccountRepository aptosAccountRepository;

    private Function<SkillTypeItemIdPair, ItemCreationState.MutableItemCreationState> itemCreationStateFactory;


    public AptosItemCreationStateRetriever(NodeApiClient aptosNodeApiClient,
                                    String aptosContractAddress,
                                    AptosAccountRepository aptosAccountRepository,
                                    Function<SkillTypeItemIdPair, ItemCreationState.MutableItemCreationState> itemCreationStateFactory
    ) {
        this.aptosNodeApiClient = aptosNodeApiClient;
        this.aptosContractAddress = aptosContractAddress;
        this.aptosAccountRepository = aptosAccountRepository;
        this.itemCreationStateFactory = itemCreationStateFactory;
    }

    public ItemCreationState retrieveItemCreationState(SkillTypeItemIdPair itemCreationId) {
        String resourceAccountAddress = getResourceAccountAddress();
        AccountResource<ItemCreation.Tables> accountResource;
        try {
            accountResource = aptosNodeApiClient.getAccountResource(resourceAccountAddress,
                    this.aptosContractAddress + "::" + ContractConstants.ITEM_CREATION_MODULE_TABLES,
                    ItemCreation.Tables.class,
                    null);
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
        String tableHandle = accountResource.getData().getItemCreationTable().getHandle();
        ItemCreation itemCreation;
        try {
            itemCreation = aptosNodeApiClient.getTableItem(
                    tableHandle,
                    ContractConstants.toNumericalAddressType(ContractConstants.ITEM_CREATION_ID_TYPE, this.aptosContractAddress),
                    this.aptosContractAddress + "::" + ContractConstants.ITEM_CREATION_MODULE_ITEM_CREATION,
                    itemCreationId,
                    ItemCreation.class,
                    null
            );
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
        return toItemCreationState(itemCreation);
    }

    private ItemCreationState toItemCreationState(ItemCreation itemCreation) {
        ItemCreationState.MutableItemCreationState itemCreationState = itemCreationStateFactory.apply(DomainBeanUtils.toSkillTypeItemIdPair(itemCreation.getItemCreationId()));
        itemCreationState.setVersion(itemCreation.getVersion());
        itemCreationState.setResourceCost(itemCreation.getResourceCost());
        itemCreationState.setRequirementsLevel(itemCreation.getRequirementsLevel());
        itemCreationState.setBaseQuantity(itemCreation.getBaseQuantity());
        itemCreationState.setBaseExperience(itemCreation.getBaseExperience());
        itemCreationState.setBaseCreationTime(itemCreation.getBaseCreationTime());
        itemCreationState.setEnergyCost(itemCreation.getEnergyCost());
        itemCreationState.setSuccessRate(itemCreation.getSuccessRate());
        return itemCreationState;
    }

    private String getResourceAccountAddress() {
        return aptosAccountRepository.findById(ContractConstants.RESOURCE_ACCOUNT_ADDRESS)
                .map(AptosAccount::getAddress).orElse(null);
    }

}

