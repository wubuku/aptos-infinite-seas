// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.aptosinfiniteseas.domain.map;

import java.util.Map;
import java.util.List;
import org.dddml.support.criterion.Criterion;
import java.util.Date;
import java.math.BigInteger;
import org.dddml.aptosinfiniteseas.domain.*;
import org.dddml.aptosinfiniteseas.specialization.Event;
import org.dddml.aptosinfiniteseas.domain.Command;

public interface MapApplicationService {
    void when(MapCommands.AddIsland c);

    MapState get(String id);

    Iterable<MapState> getAll(Integer firstResult, Integer maxResults);

    Iterable<MapState> get(Iterable<Map.Entry<String, Object>> filter, List<String> orders, Integer firstResult, Integer maxResults);

    Iterable<MapState> get(Criterion filter, List<String> orders, Integer firstResult, Integer maxResults);

    Iterable<MapState> getByProperty(String propertyName, Object propertyValue, List<String> orders, Integer firstResult, Integer maxResults);

    long getCount(Iterable<Map.Entry<String, Object>> filter);

    long getCount(Criterion filter);

    MapEvent getEvent(String accountAddress, long version);

    MapState getHistoryState(String accountAddress, long version);

    MapLocationState getMapLocation(String mapAccountAddress, Coordinates coordinates);

    Iterable<MapLocationState> getMapLocations(String mapAccountAddress, Criterion filter, List<String> orders);

}

