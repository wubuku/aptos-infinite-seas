// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.aptosinfiniteseas.domain.shipbattle;

import java.util.*;
import java.math.*;
import java.math.BigInteger;
import java.util.Date;
import org.dddml.aptosinfiniteseas.domain.*;
import org.dddml.aptosinfiniteseas.specialization.Event;

public interface ShipBattleState extends VersionedAptosMoveObject
{
    Long VERSION_ZERO = 0L;

    Long VERSION_NULL = VERSION_ZERO - 1;

    String getId();

    String getInitiator();

    String getResponder();

    Integer getStatus();

    BigInteger getEndedAt();

    Integer getWinner();

    Long getRoundNumber();

    BigInteger getRoundStartedAt();

    Integer getRoundMover();

    String getRoundAttackerShip();

    String getRoundDefenderShip();

    Long getOffChainVersion();

    String getCreatedBy();

    Date getCreatedAt();

    String getUpdatedBy();

    Date getUpdatedAt();

    Boolean getActive();

    Boolean getDeleted();

    List<Long> getInitiatorExperiences();

    List<Long> getResponderExperiences();

    interface MutableShipBattleState extends ShipBattleState, VersionedAptosMoveObject.MutableVersionedAptosMoveObject {
        void setId(String id);

        void setInitiator(String initiator);

        void setResponder(String responder);

        void setStatus(Integer status);

        void setEndedAt(BigInteger endedAt);

        void setWinner(Integer winner);

        void setRoundNumber(Long roundNumber);

        void setRoundStartedAt(BigInteger roundStartedAt);

        void setRoundMover(Integer roundMover);

        void setRoundAttackerShip(String roundAttackerShip);

        void setRoundDefenderShip(String roundDefenderShip);

        void setOffChainVersion(Long offChainVersion);

        void setCreatedBy(String createdBy);

        void setCreatedAt(Date createdAt);

        void setUpdatedBy(String updatedBy);

        void setUpdatedAt(Date updatedAt);

        void setActive(Boolean active);

        void setDeleted(Boolean deleted);

        void setInitiatorExperiences(List<Long> initiatorExperiences);

        void setResponderExperiences(List<Long> responderExperiences);


        void mutate(Event e);

        //void when(ShipBattleEvent.ShipBattleStateCreated e);

        //void when(ShipBattleEvent.ShipBattleStateMergePatched e);

        //void when(ShipBattleEvent.ShipBattleStateDeleted e);
    }

    interface SqlShipBattleState extends MutableShipBattleState {

        boolean isStateUnsaved();

        boolean getForReapplying();
    }
}

