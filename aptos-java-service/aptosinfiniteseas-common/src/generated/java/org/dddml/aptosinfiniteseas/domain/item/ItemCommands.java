// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.aptosinfiniteseas.domain.item;

import java.util.*;
import java.math.BigInteger;
import java.util.Date;
import org.dddml.aptosinfiniteseas.domain.*;

public class ItemCommands {
    private ItemCommands() {
    }

    public static class Create extends AbstractItemCommand implements ItemCommand {

        public String getCommandType() {
            return "Create";
        }

        public void setCommandType(String commandType) {
            //do nothing
        }

        /**
         * Item Id
         */
        private Long itemId;

        public Long getItemId() {
            return this.itemId;
        }

        public void setItemId(Long itemId) {
            this.itemId = itemId;
        }

        /**
         * Name
         */
        private String name;

        public String getName() {
            return this.name;
        }

        public void setName(String name) {
            this.name = name;
        }

        /**
         * Required For Completion
         */
        private Boolean requiredForCompletion;

        public Boolean getRequiredForCompletion() {
            return this.requiredForCompletion;
        }

        public void setRequiredForCompletion(Boolean requiredForCompletion) {
            this.requiredForCompletion = requiredForCompletion;
        }

        /**
         * Sells For
         */
        private Long sellsFor;

        public Long getSellsFor() {
            return this.sellsFor;
        }

        public void setSellsFor(Long sellsFor) {
            this.sellsFor = sellsFor;
        }

        /**
         * Off Chain Version
         */
        private Long offChainVersion;

        public Long getOffChainVersion() {
            return this.offChainVersion;
        }

        public void setOffChainVersion(Long offChainVersion) {
            this.offChainVersion = offChainVersion;
        }

    }

    public static class Update extends AbstractItemCommand implements ItemCommand {

        public String getCommandType() {
            return "Update";
        }

        public void setCommandType(String commandType) {
            //do nothing
        }

        /**
         * Item Id
         */
        private Long itemId;

        public Long getItemId() {
            return this.itemId;
        }

        public void setItemId(Long itemId) {
            this.itemId = itemId;
        }

        /**
         * Name
         */
        private String name;

        public String getName() {
            return this.name;
        }

        public void setName(String name) {
            this.name = name;
        }

        /**
         * Required For Completion
         */
        private Boolean requiredForCompletion;

        public Boolean getRequiredForCompletion() {
            return this.requiredForCompletion;
        }

        public void setRequiredForCompletion(Boolean requiredForCompletion) {
            this.requiredForCompletion = requiredForCompletion;
        }

        /**
         * Sells For
         */
        private Long sellsFor;

        public Long getSellsFor() {
            return this.sellsFor;
        }

        public void setSellsFor(Long sellsFor) {
            this.sellsFor = sellsFor;
        }

        /**
         * Off Chain Version
         */
        private Long offChainVersion;

        public Long getOffChainVersion() {
            return this.offChainVersion;
        }

        public void setOffChainVersion(Long offChainVersion) {
            this.offChainVersion = offChainVersion;
        }

    }

}

