// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.aptosinfiniteseas.domain.map;

import java.util.*;
import java.math.*;
import org.dddml.aptosinfiniteseas.domain.*;
import java.math.BigInteger;
import java.util.Date;
import org.dddml.aptosinfiniteseas.specialization.*;


public class MapLocationStateDto {

    private Coordinates coordinates;

    public Coordinates getCoordinates()
    {
        return this.coordinates;
    }

    public void setCoordinates(Coordinates coordinates)
    {
        this.coordinates = coordinates;
    }

    private Long type;

    public Long getType()
    {
        return this.type;
    }

    public void setType(Long type)
    {
        this.type = type;
    }

    private String occupiedBy;

    public String getOccupiedBy()
    {
        return this.occupiedBy;
    }

    public void setOccupiedBy(String occupiedBy)
    {
        this.occupiedBy = occupiedBy;
    }

    private BigInteger gatheredAt;

    public BigInteger getGatheredAt()
    {
        return this.gatheredAt;
    }

    public void setGatheredAt(BigInteger gatheredAt)
    {
        this.gatheredAt = gatheredAt;
    }

    private Boolean active;

    public Boolean getActive()
    {
        return this.active;
    }

    public void setActive(Boolean active)
    {
        this.active = active;
    }

    private Long offChainVersion;

    public Long getOffChainVersion()
    {
        return this.offChainVersion;
    }

    public void setOffChainVersion(Long offChainVersion)
    {
        this.offChainVersion = offChainVersion;
    }

    private String mapAccountAddress;

    public String getMapAccountAddress()
    {
        return this.mapAccountAddress;
    }

    public void setMapAccountAddress(String mapAccountAddress)
    {
        this.mapAccountAddress = mapAccountAddress;
    }

    private String createdBy;

    public String getCreatedBy()
    {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy)
    {
        this.createdBy = createdBy;
    }

    private Date createdAt;

    public Date getCreatedAt()
    {
        return this.createdAt;
    }

    public void setCreatedAt(Date createdAt)
    {
        this.createdAt = createdAt;
    }

    private String updatedBy;

    public String getUpdatedBy()
    {
        return this.updatedBy;
    }

    public void setUpdatedBy(String updatedBy)
    {
        this.updatedBy = updatedBy;
    }

    private Date updatedAt;

    public Date getUpdatedAt()
    {
        return this.updatedAt;
    }

    public void setUpdatedAt(Date updatedAt)
    {
        this.updatedAt = updatedAt;
    }

    private ItemIdQuantityPair[] resources;

    public ItemIdQuantityPair[] getResources() {
        return this.resources;
    }

    public void setResources(ItemIdQuantityPair[] resources) {
        this.resources = resources;
    }


    public static class DtoConverter extends AbstractStateDtoConverter
    {
        public static Collection<String> collectionFieldNames = Arrays.asList(new String[]{});

        @Override
        protected boolean isCollectionField(String fieldName) {
            return CollectionUtils.collectionContainsIgnoringCase(collectionFieldNames, fieldName);
        }

        public MapLocationStateDto[] toMapLocationStateDtoArray(Iterable<MapLocationState> states) {
            return toMapLocationStateDtoList(states).toArray(new MapLocationStateDto[0]);
        }

        public List<MapLocationStateDto> toMapLocationStateDtoList(Iterable<MapLocationState> states) {
            ArrayList<MapLocationStateDto> stateDtos = new ArrayList();
            for (MapLocationState s : states) {
                MapLocationStateDto dto = toMapLocationStateDto(s);
                stateDtos.add(dto);
            }
            return stateDtos;
        }

        public MapLocationStateDto toMapLocationStateDto(MapLocationState state)
        {
            if(state == null) {
                return null;
            }
            MapLocationStateDto dto = new MapLocationStateDto();
            if (returnedFieldsContains("Coordinates")) {
                dto.setCoordinates(state.getCoordinates());
            }
            if (returnedFieldsContains("Type")) {
                dto.setType(state.getType());
            }
            if (returnedFieldsContains("OccupiedBy")) {
                dto.setOccupiedBy(state.getOccupiedBy());
            }
            if (returnedFieldsContains("GatheredAt")) {
                dto.setGatheredAt(state.getGatheredAt());
            }
            if (returnedFieldsContains("Active")) {
                dto.setActive(state.getActive());
            }
            if (returnedFieldsContains("OffChainVersion")) {
                dto.setOffChainVersion(state.getOffChainVersion());
            }
            if (returnedFieldsContains("MapAccountAddress")) {
                dto.setMapAccountAddress(state.getMapAccountAddress());
            }
            if (returnedFieldsContains("CreatedBy")) {
                dto.setCreatedBy(state.getCreatedBy());
            }
            if (returnedFieldsContains("CreatedAt")) {
                dto.setCreatedAt(state.getCreatedAt());
            }
            if (returnedFieldsContains("UpdatedBy")) {
                dto.setUpdatedBy(state.getUpdatedBy());
            }
            if (returnedFieldsContains("UpdatedAt")) {
                dto.setUpdatedAt(state.getUpdatedAt());
            }
            if (returnedFieldsContains("Resources")) {
                ArrayList<ItemIdQuantityPair> arrayList = new ArrayList();
                if (state.getResources() != null) {
                    for (ItemIdQuantityPair s : state.getResources()) {
                        arrayList.add(s);
                    }
                }
                dto.setResources(arrayList.toArray(new ItemIdQuantityPair[0]));
            }
            return dto;
        }

    }
}

