// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.aptosinfiniteseas.domain.map;

import java.util.*;
import java.math.*;
import org.dddml.aptosinfiniteseas.domain.*;
import java.math.BigInteger;
import java.util.Date;
import org.dddml.aptosinfiniteseas.specialization.Event;

public interface MapLocationState
{
    Long VERSION_ZERO = 0L;

    Long VERSION_NULL = VERSION_ZERO - 1;

    Coordinates getCoordinates();

    Long getType();

    String getOccupiedBy();

    BigInteger getGatheredAt();

    Long getOffChainVersion();

    String getCreatedBy();

    Date getCreatedAt();

    String getUpdatedBy();

    Date getUpdatedAt();

    Boolean getActive();

    Boolean getDeleted();

    String getMapAccountAddress();

    Set<ItemIdQuantityPair> getResources();

    interface MutableMapLocationState extends MapLocationState {
        void setCoordinates(Coordinates coordinates);

        void setType(Long type);

        void setOccupiedBy(String occupiedBy);

        void setGatheredAt(BigInteger gatheredAt);

        void setOffChainVersion(Long offChainVersion);

        void setCreatedBy(String createdBy);

        void setCreatedAt(Date createdAt);

        void setUpdatedBy(String updatedBy);

        void setUpdatedAt(Date updatedAt);

        void setActive(Boolean active);

        void setDeleted(Boolean deleted);

        void setMapAccountAddress(String mapAccountAddress);

        void setResources(Set<ItemIdQuantityPair> resources);


        void mutate(Event e);

        //void when(MapLocationEvent.MapLocationStateCreated e);

        //void when(MapLocationEvent.MapLocationStateMergePatched e);

        //void when(MapLocationEvent.MapLocationStateRemoved e);
    }

    interface SqlMapLocationState extends MutableMapLocationState {
        MapLocationId getMapLocationId();

        void setMapLocationId(MapLocationId mapLocationId);


        boolean isStateUnsaved();

        boolean getForReapplying();
    }
}

