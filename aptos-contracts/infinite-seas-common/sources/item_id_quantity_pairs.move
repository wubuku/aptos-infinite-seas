// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

module infinite_seas_common::item_id_quantity_pairs {
    use infinite_seas_common::item_id_quantity_pair::ItemIdQuantityPair;

    const EDataTooLong: u64 = 102;

    struct ItemIdQuantityPairs has store, drop, copy {
        items: vector<ItemIdQuantityPair>,
    }

    public fun new(
        item_id_list: vector<u32>,
        item_quantity_list: vector<u32>,
    ): ItemIdQuantityPairs {
        let items = infinite_seas_common::sorted_vector_util::new_item_id_quantity_pairs(item_id_list, item_quantity_list);
        let item_id_quantity_pairs = ItemIdQuantityPairs {
            items,
        };
        validate(&item_id_quantity_pairs);
        item_id_quantity_pairs
    }

    public fun new_by_vector(
        items: vector<ItemIdQuantityPair>,
    ): ItemIdQuantityPairs {
        let item_id_quantity_pairs = ItemIdQuantityPairs {
            items,
        };
        validate(&item_id_quantity_pairs);
        item_id_quantity_pairs
    }

    fun validate(item_id_quantity_pairs: &ItemIdQuantityPairs) {
        let _ = item_id_quantity_pairs;
    }

    public fun items(item_id_quantity_pairs: &ItemIdQuantityPairs): vector<ItemIdQuantityPair> {
        item_id_quantity_pairs.items
    }

    public fun borrow_items(item_id_quantity_pairs: &ItemIdQuantityPairs): &vector<ItemIdQuantityPair> {
        &item_id_quantity_pairs.items
    }

}
